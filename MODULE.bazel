module(
    name = "sortcpp",
    version = "0.0.1",
)

# Only direct dependencies need to be listed below.
# Please keep the versions in sync with the versions in the WORKSPACE file.
# see https://registry.bazel.build/
bazel_dep(name = "bazel_skylib", version = "1.8.1")
bazel_dep(name = "platforms", version = "1.0.0")
bazel_dep(name = "rules_cc", version = "0.2.8")
bazel_dep(name = "rules_python", version = "1.6.1")
bazel_dep(name = "pybind11_bazel", version = "2.13.6")
#bazel_dep(name = "com_github_bazelbuild_buildtools", version = "2.13.6")

# gazelle
bazel_dep(name = "gazelle", version = "0.45.0", repo_name = "bazel_gazelle")
bazel_dep(name = "rules_python_gazelle_plugin", version = "1.6.1")  # same version as rules_python
bazel_dep(name = "gazelle_cc", version = "0.1.0")

#### DEV ONLY DEPENDENCIES BELOW HERE ####
bazel_dep(name = "googletest", version = "1.17.0", dev_dependency = True)

# Hedron's Compile Commands Extractor for Bazel
# https://github.com/hedronvision/bazel-compile-commands-extractor
bazel_dep(name = "hedron_compile_commands", dev_dependency = True)
git_override(
    module_name = "hedron_compile_commands",
    commit = "0e990032f3c5a866e72615cf67e5ce22186dcb97",
    remote = "https://github.com/hedronvision/bazel-compile-commands-extractor.git",
    # Replace the commit hash (above) with the latest (https://github.com/hedronvision/bazel-compile-commands-extractor/commits/main).
    # Even better, set up Renovate and let it do the work for you (see "Suggestion: Updates" in the README).
)

bazel_dep(
    name = "buildifier_prebuilt",
    version = "8.2.0.2",
    dev_dependency = True,
)

# Bzlmod
buildifier_prebuilt = use_extension("//:defs.bzl", "buildifier_prebuilt_deps_extension")
buildifier_prebuilt.toolchains(version = "4.2.5")
use_repo(
    buildifier_prebuilt,
    "buildifier_prebuilt_toolchains",
)

DEFAULT_PYTHON = "3.13.1"

HUB_NAME = "pypi"

python = use_extension("@rules_python//python/extensions:python.bzl", "python", dev_dependency = True)
python.toolchain(
    ignore_root_user_error = True,  # needed for CI
    is_default = True,
    python_version = DEFAULT_PYTHON,
)
use_repo(python, python = "python_versions")

pip = use_extension("@rules_python//python/extensions:pip.bzl", "pip")
pip.parse(
    download_only = True,
    hub_name = HUB_NAME,
    python_version = DEFAULT_PYTHON,
    requirements_lock = "//:requirements_lock.txt",
)
use_repo(pip, HUB_NAME)

# # vs_code_python_autocompletion
# vs_code_python_autocompletion = use_extension("//:vs_code_python_autocompletion.bzl", "vs_code_python_autocompletion", dev_dependency = True)
# use_repo(vs_code_python_autocompletion, "py_deps")
# vs_code_python_autocompletion.requirements(
#     hub_name = HUB_NAME,
#     python_version = DEFAULT_PYTHON,
#     requirements_lock = "//:requirements_lock.txt",
# )
